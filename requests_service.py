import requests
import json


def send_auth_request(base_url, login, password):
    url = f"{base_url}/api/auth"
    payload = {"login": login, "password": password}
    headers = {"Content-Type": "application/json"}

    try:
        response = requests.post(url, data=json.dumps(payload), headers=headers)
        if response.status_code == 200:
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(response.text)
            return None
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return None


# ===============================
# üîπ 1. –ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–∏—ë–º–∫—É
# ===============================
def send_accept_request(base_url, token, object_id, doc_id, doc_date):
    url = f"{base_url}/api/v1/document/tsd-run?access-token={token}"

    payload = {
        "data": {
            "action_id": 701,
            "doc_date_mdlp": doc_date,
            "doc_num_mdlp": doc_id
        },
        "doc_date": doc_date,
        "doc_id": doc_id,
        "doc_num": doc_id,
        "facility_id": object_id,
        "object_id": object_id,
        "product_group_id": 12,
        "type_id": 35
    }

    return _post_request(url, payload)


# ===============================
# üîπ 2. –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –ø—Ä–∏—ë–º–∫–∞
# ===============================
def send_incom_request(base_url, token, document_id, object_id, codes: list):
    url = f"{base_url}/api/incom?access-token={token}"

    payload = {
        "codes": codes,
        "document_id": document_id,
        "hasStaffed": True,
        "object_uid": object_id
    }

    return _post_request(url, payload)


# ===============================
# üîπ 3. –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
# ===============================
def send_outcom_request(base_url, token, invoice, invoice_date, object_id, codes: list):
    url = f"{base_url}/api/outcom?access-token={token}"

    payload = {
        "codes": codes,
        "hasStaffed": False,
        "invoice": invoice,
        "invoiceDate": invoice_date,
        "object_uid": object_id
    }

    return _post_request(url, payload)


# ===============================
# üîπ 4. –†–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞
# ===============================
def send_ungroup_request(base_url, token, group_code):
    url = f"{base_url}/api/unGroup?access-token={token}"

    payload = {
        "groupCode": group_code,
        "note": "–î—Ä—É–≥–æ–µ - —Ä–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–æ"
    }

    return _post_request(url, payload)


# ===============================
# ‚öôÔ∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
# ===============================
def _post_request(url, payload):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ —Å –ª–æ–≥–æ–º"""
    headers = {"Content-Type": "application/json"}

    print(f"\n‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞: {url}")
    print("üì¶ –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:")
    print(json.dumps(payload, indent=4, ensure_ascii=False))

    try:
        response = requests.post(url, json=payload, headers=headers)
        print(f"\nüîÑ –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:")
            print(response.json())
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return None
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None


# ===============================
# üß™ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# ===============================
if __name__ == "__main__":
    from config import Config
    config = Config()

    base_url = config.SOTEX.dev
    creds = config.SOTEX["27"]

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    auth = send_auth_request(base_url, creds.login, creds.password)
    token = auth["token"]["id"]
    print(token)
    # –ü—Ä–∏–º–µ—Ä—ã:
    # send_accept_request(base_url, token, 27, "00000013978", "2025-10-28")
    #
    # send_incom_request(base_url, token, "e4d7ae03-ce00-4ee9-824d-b883f7e706f8", 27,
    #                    ["046501092025896050", "046501092025936305"])
    #
    # send_outcom_request(base_url, token, "00000013978", "2025-10-28", 27,
    #                     ["046501092025896050", "046501092025936305"])
    #
    # send_ungroup_request(base_url, token, "046501092025936602")
